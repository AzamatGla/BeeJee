{"version":3,"sources":["components/app-header/login/login.js","components/app-header/index.js","components/app-header/app-header.js","components/todo-list-item/edit/edit.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/add-form/index.js","components/add-form/add-form.js","components/modal-form/modal-form.js","components/pagination/pagination.js","api/api.js","components/app/index.js","components/app/app.js","index.js"],"names":["Login","login","onValueChange","tokenError","className","data-toggle","data-target","class","id","tabindex","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","name","placeholder","onChange","onClick","AppHeader","tokenIsSet","logout","Edit","onDone","dataTarget","modalId","tabIndex","e","value","htmlFor","TodoItem","inputButton","text","username","email","status","done","statusMessage","event","checked","TodoList","data","elements","tasks","length","map","item","AddForm","onInput","postData","ModalForm","errors","title","console","log","Pagination","changePage","firstPage","secondPage","thirdPage","nextPreviousPage","style","color","mainUrl","developer","fetchTodoList","currentPage","page","fetch","edit","form","FormData","append","window","localStorage","getItem","requestOptions","method","body","App","props","state","message","adminUsername","adminPassword","bind","emptyInputFields","handleValidation","loginAdminAuthentication","checkAuth","this","then","response","json","setState","decodedToken","exp","Date","getTime","a","index","findIndex","before","slice","after","newItem","target","preventDefault","alert","newArr","newObj","res","catch","err","createTask","password","pageNumber","componentDidMount","newFirstPage","newSecondPage","newThirdPage","formIsValid","match","test","setItem","token","tokenTime","clear","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afd795bd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Login = ({login, onValueChange, tokenError}) => {\r\n    return (\r\n        <>\r\n        <span className=\"loginButton\">\r\n            <a data-toggle=\"modal\" data-target=\"#loginModal\">Войти</a>\r\n        </span>\r\n\r\n        <div class=\"modal fade\" id=\"loginModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header border-bottom-0\">\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"form-title text-center\">\r\n                <h4>Логин</h4>\r\n              </div>\r\n              <div class=\"d-flex flex-column text-center\">\r\n                <form>\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" name=\"adminUsername\" id=\"email1\" placeholder=\"Введите логин...\" onChange={onValueChange}/>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <input type=\"password\" class=\"form-control\" name=\"adminPassword\" id=\"password1\" placeholder=\"Введите пароль...\" onChange={onValueChange}/>\r\n                  </div>\r\n                  {tokenError ? <span className=\"error\">{tokenError}</span> : null}\r\n                  <button type=\"submit\" class=\"btn btn-info btn-block btn-round\" data-dismiss=\"modal\" onClick={login}>Войти</button>\r\n                </form>\r\n                \r\n          </div>\r\n          </div>\r\n          </div>   \r\n          </div>\r\n          </div>\r\n          </>\r\n          )\r\n};\r\n\r\nexport default Login;","import AppHeader from './app-header';\r\nexport default AppHeader;","import React from 'react';\r\nimport Login from './login/login';\r\nimport './app-header.css';\r\n\r\n\r\nconst AppHeader = ({login, onValueChange, tokenIsSet, tokenError, logout}) => {\r\n    return (\r\n        <div className=\"app-header d-flex justify-content-between\">\r\n            <h1>Задачник BeeJee</h1>\r\n            {tokenIsSet ? <button className='btn btn-info' onClick={logout}>Выход</button> :  <Login login={login} onValueChange={onValueChange} tokenError={tokenError}/>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nconst Edit = ({onValueChange, onDone, id}) => {\r\n    const dataTarget = `#loginModal-${id}`;\r\n    const modalId = `loginModal-${id}`;\r\n    return (\r\n        <>\r\n        <span className=\"loginButton m-1\" id={id}>\r\n            <a data-toggle=\"modal\" data-target={dataTarget} className=\"btn btn-secondary\">Редактировать</a>\r\n        </span>\r\n\r\n<div className=\"modal fade\" id={modalId} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n<div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n  <div className=\"modal-content\">\r\n    <div className=\"modal-header border-bottom-0\">\r\n      <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div className=\"modal-body\">\r\n      <div className=\"form-title text-center\">\r\n        <h4>Редактирование</h4>\r\n      </div>\r\n      <div className=\"d-flex\">\r\n        <form onChange={e => onValueChange(e)}>\r\n          <div className=\"form-group\">\r\n            <input type=\"text\" className=\"form-control\" name=\"text\" placeholder=\"Введите текст...\" onChange={(e) => onValueChange(e)}/>\r\n          </div>\r\n          <p>Выберите статус задачи:</p>\r\n            <input type=\"radio\" id=\"not-done\" name=\"status\" value=\"0\"/>\r\n            <label htmlFor=\"not-done\">Задача не выполнена</label><br/>\r\n            <input type=\"radio\" id=\"not-done-edited\" name=\"status\" value=\"1\"/>\r\n            <label htmlFor=\"not-done-edited\">Задача не выполнена и отредактирована</label><br/>\r\n            <input type=\"radio\" id=\"done\" className={id} name=\"status\" value=\"10\"/>\r\n            <label htmlFor=\"done\">Задача выполнена</label><br/>\r\n            <input type=\"radio\" id=\"done-edited\" name=\"status\" value=\"11\"/>\r\n            <label htmlFor=\"done-edited\">Задача выполнена и отредактирована</label><br/>\r\n          <button type=\"button\" className=\"btn btn-info btn-block btn-round w-50\" data-dismiss=\"modal\" onClick={e => onDone(e, id)}>Редактировать</button>\r\n        \r\n        </form>\r\n        \r\n      </div>\r\n  </div>\r\n  </div>   \r\n  </div>\r\n  </div>\r\n  </>\r\n    )\r\n}\r\n\r\nexport default Edit;","import TodoItem from './todo-list-item';\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport Edit from './edit/edit';\r\nimport './todo-list-item.css';\r\n\r\nconst TodoItem = ({text, id, username, email, status, onDone, done, tokenIsSet, onValueChange}) => {\r\n    let className = 'app-list-item d-flex justify-content-between';\r\n    let statusMessage = '';\r\n    if (done) {\r\n        className += ' line-through';\r\n    }\r\n    if (status === 0) {\r\n        statusMessage = 'Задача не выполнена';\r\n    }\r\n    else if (status === 1) {\r\n        statusMessage = 'Задача не выполнена и отредактирована админом';\r\n    }\r\n    else if (status === 10) {\r\n        statusMessage = 'Задача выполнена';\r\n    }\r\n    else {\r\n        statusMessage = 'Задача выполнена и отредактирована админом';\r\n    }\r\n    let inputButton;\r\n    if (status === 10) {\r\n        inputButton = <input className='checkbox form-check-input' id={id} type='checkbox' onChange={(event) => onDone(event, id)} checked/>;\r\n    }\r\n    else {\r\n        inputButton = <input className='checkbox form-check-input' id={id} type='checkbox' onChange={(event) => onDone(event, id)}/>;\r\n    }\r\n    return (\r\n        <li className={className} key={id}>\r\n            <div className='username'>\r\n                <span className=\"app-list-item-label\">{username}</span>\r\n            </div>\r\n            <div className=\"email\">\r\n                <span className=\"app-list-item-label\">{email}</span>\r\n            </div>\r\n            <div className=\"text d-flex justify-content-center\">\r\n                <span className=\"app-list-item-label\">{text}</span>\r\n            </div>\r\n            <div className=\"status\">\r\n                <span className=\"app-list-item-label\">{statusMessage}</span>\r\n            </div>\r\n             <div className=\"d-flex justify-content-center align-items-center\">\r\n                 {inputButton}\r\n             </div>\r\n             {tokenIsSet && <Edit onValueChange={onValueChange} onDone={onDone} id={id}/>}\r\n         </li>\r\n    )\r\n};\r\n\r\nexport default TodoItem\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default class PostItem extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             className: 'app-list-item d-flex justify-content-between' \r\n//         }\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <li className={this.state.className} key={id} onClick={}>\r\n// //                 <span className=\"app-list-item-label\">{title}</span>\r\n// //                 <div className=\"d-flex justify-content-center align-items-center\">\r\n// //                     <button className=\"btn-star btn-sm\">\r\n// //                         <i className='fa fa-star'></i>\r\n// //                     </button>\r\n// //                     <button className=\"btn-trash btn-sm\">\r\n// //                     <i className=\"fa fa-trash-o\"></i>\r\n// //                     </button>\r\n// //                     <i className=\"fa fa-heart\"></i>\r\n// //                 </div>\r\n// //             </li>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// const PostItem = ({title, important, id}) => {\r\n//     let className = \"app-list-item d-flex justify-content-between\";\r\n    \r\n    \r\n    \r\n//     return ( \r\n//             <li className={className} key={id} onClick={}>\r\n//                 <span className=\"app-list-item-label\">{title}</span>\r\n//                 <div className=\"d-flex justify-content-center align-items-center\">\r\n//                     <button className=\"btn-star btn-sm\">\r\n//                         <i className='fa fa-star'></i>\r\n//                     </button>\r\n//                     <button className=\"btn-trash btn-sm\">\r\n//                     <i className=\"fa fa-trash-o\"></i>\r\n//                     </button>\r\n//                     <i className=\"fa fa-heart\"></i>\r\n//                 </div>\r\n//             </li>\r\n//     )\r\n// }\r\n","import TodoList from './todo-list';\r\nexport default TodoList;","import React from 'react';\r\nimport TodoItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\n\r\nconst TodoList = ({data, onDone, tokenIsSet, onValueChange}) => {\r\n    \r\n    let elements = null;\r\n    if (!data.tasks) {\r\n        elements = <span className='h3'>No tasks yet...</span>\r\n    }\r\n    else if (data.tasks.length > 0) {\r\n        elements = data.tasks.map(item => {\r\n\r\n            return (<>\r\n                <TodoItem \r\n                    className=\"list-group-item\" \r\n                    {...item} \r\n                    onDone={onDone}\r\n                    tokenIsSet={tokenIsSet}\r\n                    onValueChange={onValueChange}\r\n                /> \r\n                </>\r\n            )\r\n        })\r\n        \r\n    }\r\n    else {\r\n         elements = <span className='h3'>No tasks yet...</span>\r\n    }\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>  \r\n    )\r\n    \r\n}\r\n\r\nexport default TodoList;","import AddForm from './add-form';\r\nexport default AddForm;","import React from 'react';\r\nimport './add-form.css';\r\n\r\n\r\nconst AddForm = ({onInput, postData}) => {\r\n    return (\r\n        <div className=\"d-flex bottom-panel justify-content-center\">\r\n            <button className='btn btn-info' data-toggle=\"modal\" data-target=\"#exampleModal\">Добавить</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddForm;","import React from 'react';\r\n\r\nconst ModalForm = ({postData, onValueChange, username, email, text, errors}) => {\r\n    const submitButton = () => {\r\n        console.log(errors.title);\r\n        console.log(errors.email);\r\n        if (errors.title == false && errors.email == false) {\r\n            console.log('yes')\r\n            return (<button type=\"submit\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={postData}>Send message</button>)\r\n        \r\n        }\r\n        console.log('here')\r\n        console.log(errors)\r\n        return (<button type=\"button\" class=\"btn btn-primary\">Send message</button>)\r\n        \r\n    };\r\n    return (\r\n        <div class=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">New task</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form>\r\n                <div class=\"form-group\">\r\n                    <label htmlFor=\"recipient-name\" class=\"col-form-label\">username:\r\n                        {errors.title && <span className='error-red'>&nbsp;{errors.title}</span>}\r\n                    </label>\r\n                    <input type=\"text\" name='username' value={username} className=\"form-control\" id=\"recipient-name\" onChange={onValueChange}/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label htmlFor=\"message-text\" class=\"col-form-label\">email:\r\n                        {errors.email && <span className='error-red'>&nbsp;{errors.email}</span>}\r\n                    </label>\r\n                    <input type=\"text\" name='email' value={email} className=\"form-control\" id=\"message-text\" onChange={onValueChange}/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label htmlFor=\"message-text\" class=\"col-form-label\">text:</label>\r\n                    <input type=\"text\" name='text' className='form-control' value={text} onChange={onValueChange}/>\r\n                </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                {submitButton()}\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalForm;","import React from 'react';\r\n\r\n\r\nconst Pagination = ({changePage, firstPage, secondPage, thirdPage, nextPreviousPage}) => {\r\n    const next = 1,\r\n          previous = 0;\r\n    return (\r\n        <nav aria-label=\"Page navigation example\" className=\"d-flex justify-content-center mt-5\">\r\n            <ul className=\"pagination\">\r\n                <li className=\"page-item\"><a className=\"page-link btn\" style={{color: \"black\"}} onClick={() => nextPreviousPage(previous)}>&laquo;</a></li>\r\n                <li className=\"page-item\"><a className=\"page-link btn\" style={{color: \"black\"}} onClick={() => changePage(firstPage)}>{firstPage}</a></li>\r\n                <li className=\"page-item\"><a className=\"page-link btn\" style={{color: \"black\"}} onClick={() => changePage(secondPage)}>{secondPage}</a></li>\r\n                <li className=\"page-item\"><a className=\"page-link btn\" style={{color: \"black\"}} onClick={() => changePage(thirdPage)}>{thirdPage}</a></li>\r\n                <li className=\"page-item\"><a className=\"page-link btn\" style={{color: \"black\"}} onClick={() => nextPreviousPage(next)}>&raquo;</a></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination;","const mainUrl = 'https://uxcandy.com/~shapoval/test-task-backend/v2/';\r\nconst developer = 'azamata';\r\nconst fetchTodoList = (currentPage) => {\r\n    let page = 1;\r\n    if(typeof currentPage !== \"undefined\") {\r\n        page = currentPage;\r\n    }\r\n    return fetch(`${mainUrl}?developer=${developer}&page=${page}`);\r\n};\r\n\r\nconst createTask = (username, email, text) => {\r\n    let form = new FormData();\r\n        form.append(\"username\", username);\r\n        form.append(\"email\", email);\r\n        form.append(\"text\", text);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        body: form\r\n    };\r\n    return fetch(`${mainUrl}create?developer=${developer}`, requestOptions);\r\n}\r\n\r\nconst login = (username, password) => {\r\n    let form = new FormData();\r\n        form.append(\"username\", username);\r\n        form.append(\"password\", password);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        body: form\r\n    };\r\n    return fetch(`${mainUrl}login?developer=${developer}`, requestOptions);\r\n}\r\n\r\nconst edit = (id, text, status) => {\r\n    console.log('inside it')\r\n    let form = new FormData();\r\n        form.append('token', window.localStorage.getItem('access token'));\r\n        form.append('text', text);\r\n        form.append('status', status);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        body: form\r\n    };\r\n    console.log(id, text, status)\r\n    return fetch(`${mainUrl}edit/${id}?developer=${developer}`, requestOptions);\r\n}\r\n\r\nexport {fetchTodoList, createTask, login, edit}\r\n// module.export = createTask;\r\n","import App from './app'\r\nexport default App;","import React, {Component} from 'react';\r\nimport AppHeader from '../app-header/';\r\nimport TodoList from '../todo-list';\r\nimport AddForm from '../add-form';\r\nimport ModalForm from '../modal-form/modal-form';\r\nimport Pagination from '../pagination/pagination';\r\nimport {fetchTodoList, createTask, login, edit} from '../../api/api';\r\nimport './app.css'\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {message:{tasks: ['empty']}},\r\n            username: '',\r\n            email: '',\r\n            text: '',\r\n            status: '',\r\n            currentPage: 1,\r\n            firstPage: 1,\r\n            secondPage: 2,\r\n            thirdPage: 3,\r\n            errors: {\r\n                title: 'заполните данные',\r\n                email: 'заполните данные'\r\n            },\r\n            adminUsername: '',\r\n            adminPassword: '',\r\n            tokenIsSet: false,\r\n            tokenError: false\r\n        };\r\n        this.onDone = this.onDone.bind(this);\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.postData = this.postData.bind(this);\r\n        this.changePage = this.changePage.bind(this);\r\n        this.emptyInputFields = this.emptyInputFields.bind(this);\r\n        this.nextPreviousPage = this.nextPreviousPage.bind(this);\r\n        this.handleValidation = this.handleValidation.bind(this);\r\n        this.loginAdminAuthentication = this.loginAdminAuthentication.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.checkAuth = this.checkAuth.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.checkAuth();\r\n        fetchTodoList(this.state.currentPage)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data) {\r\n                this.setState({\r\n                    data: data\r\n                });\r\n            }\r\n        })\r\n        if (window.localStorage.getItem('access token')) {\r\n            this.setState(({tokenIsSet}) => ({tokenIsSet: true}))\r\n        }\r\n    }\r\n\r\n    checkAuth() {\r\n        let decodedToken = window.localStorage.getItem('access token');\r\n        if (decodedToken) {\r\n            if (decodedToken.exp < new Date().getTime()/1000) {\r\n                this.setState(({tokenIsSet}) => ({\r\n                tokenIsSet: false\r\n                }));\r\n            }\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    async onDone(e, id) {\r\n        const {data} = this.state,\r\n              index = data.message.tasks.findIndex((item) => item.id === id),\r\n              before = data.message.tasks.slice(0, index),\r\n              after = data.message.tasks.slice(index+1);\r\n        const newItem = data.message.tasks[index];\r\n            \r\n            if (e.target.value === 'on' || e.target.value === 'off') {\r\n                if (this.state.tokenIsSet) {\r\n                    if (newItem.status === 0) {\r\n                        newItem.status = 10;\r\n                    }\r\n                    else {\r\n                        newItem.status = 0;\r\n                    }   \r\n                }\r\n                else {\r\n                    e.preventDefault();\r\n                    alert('Только админ может изменять состояние задачи');\r\n                }\r\n                \r\n            }\r\n            else {\r\n                \r\n                if (this.state.status == 0) {\r\n                    newItem.status = 0;\r\n                }\r\n                else if (this.state.status == 1) {\r\n                    newItem.status = 1;\r\n                }\r\n                else if (this.state.status == 10) {\r\n                    newItem.status = 10;\r\n                }\r\n                else {\r\n                    newItem.status = 11;\r\n                }\r\n            }\r\n            newItem.text = this.state.text;\r\n            \r\n                       \r\n              \r\n        const newArr = [...before, newItem, ...after]\r\n        const newObj = {\r\n            status: 'ok',\r\n            message: {\r\n                tasks: newArr\r\n            }\r\n        }\r\n        await this.setState(({data}) => ({\r\n           data : newObj}\r\n        ));\r\n        console.log(this.state.data)\r\n        return edit(id, newItem.text, newItem.status)\r\n            .then(res => res.json)\r\n            .then(res => res)\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    async emptyInputFields() {\r\n        this.setState(({username, email, text}) => ({\r\n            username: '',\r\n            email: '',\r\n            text: ''\r\n        }));\r\n    }\r\n\r\n    postData(e) {\r\n        \r\n            const {username, email, text, currentPage} = this.state;\r\n            if  (this.handleValidation(e.target)) {\r\n                createTask(username, email, text)\r\n                .then(response => {\r\n                    fetchTodoList(currentPage)\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        if (data) {\r\n                            this.setState({\r\n                                data: data\r\n                            });\r\n                        }\r\n                    });\r\n                })\r\n                .then(res => {\r\n                    this.emptyInputFields();\r\n                })\r\n                .catch(err => console.log(`We got a mistake: ${err}`))\r\n            }\r\n       \r\n        \r\n    }\r\n\r\n    async onValueChange(e) {\r\n        let newItem = {};\r\n        if (e.target.name === 'username') {\r\n            newItem.username = e.target.value;\r\n            await this.setState(({username}) => ({\r\n                username: newItem.username\r\n            })\r\n            )\r\n        }\r\n        else if (e.target.name === 'email') {\r\n            newItem.email = e.target.value;\r\n            await this.setState(({email}) => ({\r\n                email: newItem.email\r\n            })\r\n            )\r\n        }\r\n        else if (e.target.name === 'adminUsername') {\r\n            newItem.adminUsername = e.target.value;\r\n            await this.setState(({adminUsername}) => ({\r\n                adminUsername: newItem.adminUsername\r\n            }))\r\n        }\r\n        else if (e.target.name === 'adminPassword') {\r\n            newItem.password = e.target.value;\r\n            await this.setState(({adminPassword}) => ({\r\n                adminPassword: newItem.password\r\n            }))\r\n        }\r\n        else if (e.target.name === 'status') {\r\n            newItem.status = e.target.value;\r\n            await this.setState(({status}) => ({\r\n                status: newItem.status\r\n            }))\r\n           \r\n        }\r\n        else {\r\n            newItem.text = e.target.value;\r\n            await this.setState(({text}) => ({\r\n            text: newItem.text\r\n            })\r\n        )\r\n        \r\n        }\r\n        return this.handleValidation(e.target);\r\n        \r\n    }\r\n\r\n    async changePage(pageNumber) {\r\n        const {currentPage} = this.state;\r\n        await this.setState(({currentPage}) => ({\r\n            currentPage: pageNumber\r\n        }) \r\n        )\r\n        this.componentDidMount(currentPage)\r\n    }\r\n\r\n    nextPreviousPage(value) {\r\n        let newFirstPage = 1, \r\n            newSecondPage = 2, \r\n            newThirdPage = 3;\r\n        const {firstPage, secondPage, thirdPage} = this.state;\r\n        if (value === 1) {\r\n            newFirstPage = firstPage + 1;\r\n            newSecondPage = secondPage + 1;\r\n            newThirdPage = thirdPage + 1;\r\n        }\r\n        else if (firstPage !== 1) {\r\n            newFirstPage = firstPage - 1;\r\n            newSecondPage = secondPage - 1;\r\n            newThirdPage = thirdPage - 1;\r\n        }\r\n        \r\n        \r\n        this.setState(({firstPage, secondPage, thirdPage}) => ({\r\n            firstPage: newFirstPage,\r\n            secondPage: newSecondPage,\r\n            thirdPage: newThirdPage\r\n        }))\r\n    }\r\n\r\n    handleValidation(data){\r\n        let title = '';\r\n        let email = '';\r\n        let formIsValid = true;\r\n        if(data.name === 'username'){\r\n            \r\n            if (data.value === '') {\r\n            formIsValid = false;\r\n            title = \"Name cannot be empty\";\r\n            }\r\n            else if(typeof data.value !== \"undefined\"){\r\n            if(!data.value.match(/^[a-zA-Z]+$/)){\r\n               formIsValid = false;\r\n               title = \"Only letters\";\r\n            }        \r\n         }\r\n\r\n         this.setState(({errors}) => {\r\n             errors['title'] = title\r\n         })\r\n        }\r\n        if (data.name === 'email') {\r\n            if(data.value === '') {\r\n                formIsValid = false;\r\n                email = \"Email cannot be empty\";\r\n             }\r\n       \r\n            else if (typeof data.value !== \"undefined\"){\r\n                var re = /\\S+@\\S+\\.\\S+/;\r\n     \r\n                if (!re.test(data.value)) {\r\n                   formIsValid = false;\r\n                   email = \"Email is not valid\";\r\n                 }\r\n             }\r\n        \r\n            this.setState(({errors}) => {\r\n                errors['email'] = email\r\n            })\r\n        }\r\n       if (formIsValid) {\r\n           this.setState(({errors}) => ({\r\n               errors: {\r\n                   title: '',\r\n                   email: ''\r\n               }\r\n           }))\r\n       }\r\n       return formIsValid;\r\n   }\r\n\r\n   loginAdminAuthentication(e) {\r\n        e.preventDefault()\r\n        login(this.state.adminUsername, this.state.adminPassword)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'ok') {\r\n                    window.localStorage.setItem('access token', res.message.token)\r\n                    this.setState(({tokenIsSet, tokenTime}) => ({\r\n                        tokenIsSet: true,\r\n                        tokenTime: new Date()\r\n                    }))\r\n                }\r\n                else {\r\n                    this.setState(({tokenError}) => ({\r\n                        tokenError: 'Неверный логин или пароль'\r\n                    }))\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n   }\r\n\r\n   logout() {\r\n       window.localStorage.clear();\r\n       this.setState(({tokenIsSet}) => ({\r\n           tokenIsSet: false\r\n       }));\r\n   }\r\n\r\n    \r\n    render() {\r\n        const {data, firstPage, secondPage, thirdPage, username, email, text, errors, tokenIsSet, tokenError} = this.state;\r\n        return (\r\n            <div className='app'>\r\n                <AppHeader login={this.loginAdminAuthentication} onValueChange={this.onValueChange} tokenIsSet={tokenIsSet} tokenError={tokenError} logout={this.logout}/>\r\n                <TodoList data={data.message} onDone={this.onDone} tokenIsSet={this.state.tokenIsSet} onValueChange={this.onValueChange}/>\r\n                <Pagination changePage={this.changePage} firstPage={firstPage} secondPage={secondPage} thirdPage={thirdPage} nextPreviousPage={this.nextPreviousPage}/>\r\n                <AddForm onInput={this.onInput} postData={this.postData}/>\r\n                <ModalForm postData={this.postData} onValueChange={this.onValueChange} username={username} email={email} text={text} errors={errors}/>\r\n            </div>\r\n            )\r\n    }\r\n} \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/';\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}